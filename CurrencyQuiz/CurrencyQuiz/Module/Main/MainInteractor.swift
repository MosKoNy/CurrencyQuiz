//
//  MainInteractor.swift
//  CurrencyQuiz
//
//  Created by GA007295 on 26/2/2566 BE.
//  Copyright (c) 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire
import ObjectMapper

protocol MainBusinessLogic
{
    func getCurrentPrice(request: Main.CurrentPrice.Request)
}

protocol MainDataStore
{
    //var name: String { get set }
}

class MainInteractor: MainBusinessLogic, MainDataStore
{
    var presenter: MainPresentationLogic?
    var worker: MainWorker?
    
    func getCurrentPrice(request: Main.CurrentPrice.Request)
    {
//        worker = MainWorker()
//        worker?.GetCurrentPrice()
        
        AF.request("https://api.coindesk.com/v1/bpi/currentprice.json",
                   method: .get,
                   requestModifier: { $0.timeoutInterval = 10 }).response { response in
            
            switch response.result {
            case .success(let data):
                guard let jsonData = data,
                      let jsonString = String(data: jsonData, encoding: .utf8) else {
                    print("Error Convert to json string")
                    return
                }
                
                let mapper = Mapper<CurrentPriceModel>().map(JSONString: jsonString)
                let response = Main.CurrentPrice.Response(currencyPrice: mapper!)
                self.presenter?.presentCurrentPrice(response: response)
            case .failure(let error):
                print("Error: \(error)")
            }
        }
    }
}
